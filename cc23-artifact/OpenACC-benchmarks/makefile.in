##===----------------------------------------------------------------------===##
##
##     KernelGen -- A prototype of LLVM-based auto-parallelizing Fortran/C
##        compiler for NVIDIA GPUs, targeting numerical modeling code.
##
## This file is distributed under the University of Illinois Open Source
## License. See LICENSE.TXT for details.
##
##===----------------------------------------------------------------------===##

# Floating-point type: float or double
real = float
szreal =
pgi_szreal =
ifeq ($(real), double)
szreal = -fdefault-real-8
pgi_szreal = -r8
endif

# Verbose setting
VERBOSE = 0
SILENT = @
ifeq ($(VERBOSE), 1)
SILENT =
endif

# GCC compiler/linker options
GCC = gcc -O3 -D_GNU_SOURCE -std=c99
GFORTRAN = gfortran -O3 $(szreal)

# KernelGen compiler/linker options
KERNELGEN_GCC = kernelgen-gcc -O3 -D_GNU_SOURCE -std=c99
KERNELGEN_GFORTRAN = kernelgen-gfortran -O3 $(szreal)

# Intel compiler/linker options
ICC = icc -O3 -D_GNU_SOURCE -D_MIC -std=c99 -openmp-report=2 -vec-report6 -opt-subscript-in-range -align -offload-build
IFORT = ifort -O3 -D_MIC -openmp-report=2 -vec-report6 -opt-subscript-in-range -align -offload-build $(szreal)

# PGI/OpenACC compiler/linker options
GPUARCH ?= 30
GPUCUDA ?= 5.0
PGCC = pgcc -I. -acc -O3 -Minfo=accel -ta=nvidia:keep,cc$(GPUARCH),cuda$(GPUCUDA),ptxinfo,loadcache:L1 # -Wl,--wrap=__pgi_uacc_cuda_launch
PGF90 = pgf90 -acc -O3 -Minfo=accel -ta=nvidia:keep,cc$(GPUARCH),cuda$(GPUCUDA),ptxinfo,loadcache:L1 # -Wl,--wrap=__pgi_uacc_cuda_launch $(pgi_szreal)

# CAPS/OpenACC compiler/linker options
CAPSCC = hmpp --openacc-target=CUDA -k -f --nvcc-options -O3,-arch,sm_$(GPUARCH) gcc -O3 -D_GNU_SOURCE -std=c99 -Wl,--wrap=openacci_call -Wl,--wrap=dlsym
CAPSF90 = hmpp --openacc-target=CUDA -k -f --nvcc-options -O3,-arch,sm_$(GPUARCH) gfortran -O3 $(szreal) -Wl,--wrap=openacci_call -Wl,--wrap=dlsym

# PathScale/OpenACC compiler/linker options
PATHHOME ?= /home/wwa/enzo/xacc/debug/Xcompiler/
PATHCCPATH = $(PATHHOME)bin/
PATHCC_INCLUDE_PATH = $(PATHHOME)include/
PATHCCAPI  = -acc
PATHCC = $(PATHCCPATH)pathcc $(PATHCCAPI) -O3 -I$(PATHCC_INCLUDE_PATH)
PATHF90 = $(PATHCCPATH)pathf90 $(PATHCCAPI) -O3 -I$(PATHCC_INCLUDE_PATH)

# NVIDIA compile options
NVCC = nvcc -O3

# PATUS compiler
PATUS = patus

# PATUS-specific GCC compiler options
PATUS_GCC = gcc -O3 -mavx -fopenmp -std=c99 -D_GNU_SOURCE -D_PATUS

# Default grid dimensions
NX ?= 512
NY ?= 256
NS ?= 256
NT ?= 10
NRUNS ?= 10

